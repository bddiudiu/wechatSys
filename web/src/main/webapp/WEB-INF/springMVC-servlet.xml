<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns="http://www.springframework.org/schema/beans"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
      http://www.springframework.org/schema/beans/spring-beans.xsd
      http://www.springframework.org/schema/context
      http://www.springframework.org/schema/context/spring-context.xsd
      http://www.springframework.org/schema/mvc
      http://www.springframework.org/schema/mvc/spring-mvc.xsd">

    <!--指明 controller 所在包，并扫描其中的注解-->
    <context:component-scan base-package="com.alaso.wechat.web.controller"/>

    <!-- 静态资源(js、image等)的访问 -->
    <!--<mvc:default-servlet-handler/>-->

    <!-- 开启注解 -->
    <mvc:annotation-driven/>

    <!-- 过滤器 -->
    <mvc:interceptors>
        <mvc:interceptor>
            <mvc:mapping path="/system/**"/>
            <bean class="com.alaso.wechat.web.interceptor.ManagerInterceptor" />
        </mvc:interceptor>
    </mvc:interceptors>

    <!-- 静态资源访问 -->
    <mvc:resources location="/resources/" mapping="/resources/**"/>

    <!-- 页面展示 -->
    <bean class="org.springframework.web.servlet.view.ContentNegotiatingViewResolver">
        <property name="order" value="1"/>
        <property name="favorParameter" value="false"/>
        <property name="ignoreAcceptHeader" value="true"/>
        <property name="defaultContentType" value="text/html"/>
        <property name="mediaTypes">
            <map>
                <entry key="json" value="application/json"/>
                <entry key="xml" value="application/xml"/>
            </map>
        </property>
        <property name="viewResolvers">
            <list>
                <bean class="org.springframework.web.servlet.view.BeanNameViewResolver"/>
                <bean
                        class="org.springframework.web.servlet.view.InternalResourceViewResolver">
                    <property name="prefix" value="/WEB-INF/view/"/>
                    <property name="suffix" value=".jsp"/>
                </bean>
            </list>
        </property>
        <!--<property name="defaultViews">-->
            <!--<list>-->
                <!--<bean id="jsonView" class="org.springframework.web.servlet.view.json.MappingJackson2JsonView"/>-->
                <!--<bean id="xmlView"-->
                      <!--class="org.springframework.web.servlet.view.xml.MarshallingView">-->
                    <!--<constructor-arg>-->
                        <!--<bean class="org.springframework.oxm.jaxb.Jaxb2Marshaller">-->
                            <!--<property name="classesToBeBound">-->
                                <!--<list>-->
                                    <!--<value>com.ntjoy.wechat.entity.Reply</value>-->
                                <!--</list>-->
                            <!--</property>-->
                        <!--</bean>-->
                    <!--</constructor-arg>-->
                <!--</bean>-->
            <!--</list>-->
        <!--</property>-->

    </bean>

    <!-- SpringMVC上传文件时，需要配置MultipartResolver处理器 -->
    <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
        <property name="defaultEncoding" value="UTF-8"/>
        <!--指定所上传文件的总大小不能超过2M。注意maxUploadSize属性的限制不是针对单个文件，而是所有文件的容量之和    -->
        <property name="maxUploadSize" value="2048000"/>
    </bean>
    <!-- SpringMVC在超出上传文件限制时，会抛出org.springframework.web.multipart.MaxUploadSizeExceededException -->
    <!-- 该异常是SpringMVC在检查上传的文件信息时抛出来的，而且此时还没有进入到Controller方法中 -->
    <bean id="exceptionResolver" class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">
        <property name="exceptionMappings">
            <props>
                <!--遇到MaxUploadSizeExceededException异常时，自动跳转到/WEB-INF/jsp/error_fileupload.jsp页面-->
                <prop key="org.springframework.web.multipart.MaxUploadSizeExceededException">error_fileupload</prop>
            </props>
        </property>
    </bean>

</beans>


